[{"filePath":"/home/nicolasm/Bureau/ponyracer/cypress.config.ts","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: The keyword 'import' is reserved","line":1,"column":1}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { defineConfig } from 'cypress';\n\nexport default defineConfig({\n  reporter: 'mochawesome',\n  reporterOptions: {\n    reportDir: 'results/mochawesome',\n    overwrite: false,\n    html: false,\n    json: true\n  },\n  video: false,\n  retries: 3,\n  e2e: {\n    experimentalRunAllSpecs: true,\n    baseUrl: 'http://localhost:4173'\n  }\n});\n","usedDeprecatedRules":[]},{"filePath":"/home/nicolasm/Bureau/ponyracer/cypress/e2e/example.cy.ts","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token )","line":3,"column":28}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// https://docs.cypress.io/api/introduction/api.html\n\ndescribe('My First Test', () => {\n  it('visits the app root url', () => {\n    cy.visit('/')\n    cy.contains('h1', 'You did it!')\n  })\n})\n","usedDeprecatedRules":[]},{"filePath":"/home/nicolasm/Bureau/ponyracer/cypress/e2e/home.cy.ts","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token )","line":1,"column":24}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"describe('Ponyracer', () => {\n  it('should display title on home page', () => {\n    cy.visit('/');\n    cy.contains('h1', 'Ponyracer');\n  });\n\n  const navbarBrand = '.navbar-brand';\n  const navbarLink = '.nav-link';\n\n  it('should display a navbar', () => {\n    cy.visit('/');\n    cy.contains(navbarBrand, 'PonyRacer');\n    cy.contains(navbarLink, 'Races');\n  });\n\n  it('should display a navbar collapsed on small screen', () => {\n    cy.viewport('iphone-6+');\n    cy.visit('/');\n    cy.contains(navbarBrand, 'PonyRacer');\n    cy.get(navbarLink).should('not.be.visible');\n\n    // toggle the navbar\n    cy.get('.navbar-toggler').click();\n    cy.get(navbarLink).should('be.visible');\n  });\n\n  it('should display a race list', () => {\n    cy.visit('/');\n    cy.get('h2').should('have.length', 2);\n    cy.get('.container ul li').should('have.length', 10);\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"/home/nicolasm/Bureau/ponyracer/cypress/support/commands.ts","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: The keyword 'export' is reserved","line":39,"column":1}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/// <reference types=\"cypress\" />\n// ***********************************************\n// This example commands.ts shows you how to\n// create various custom commands and overwrite\n// existing commands.\n//\n// For more comprehensive examples of custom\n// commands please read more here:\n// https://on.cypress.io/custom-commands\n// ***********************************************\n//\n//\n// -- This is a parent command --\n// Cypress.Commands.add('login', (email, password) => { ... })\n//\n//\n// -- This is a child command --\n// Cypress.Commands.add('drag', { prevSubject: 'element'}, (subject, options) => { ... })\n//\n//\n// -- This is a dual command --\n// Cypress.Commands.add('dismiss', { prevSubject: 'optional'}, (subject, options) => { ... })\n//\n//\n// -- This will overwrite an existing command --\n// Cypress.Commands.overwrite('visit', (originalFn, url, options) => { ... })\n//\n// declare global {\n//   namespace Cypress {\n//     interface Chainable {\n//       login(email: string, password: string): Chainable<void>\n//       drag(subject: string, options?: Partial<TypeOptions>): Chainable<Element>\n//       dismiss(subject: string, options?: Partial<TypeOptions>): Chainable<Element>\n//       visit(originalFn: CommandOriginalFn, url: string, options: Partial<VisitOptions>): Chainable<Element>\n//     }\n//   }\n// }\n\nexport {}\n","usedDeprecatedRules":[]},{"filePath":"/home/nicolasm/Bureau/ponyracer/cypress/support/e2e.ts","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: The keyword 'import' is reserved","line":17,"column":1}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// ***********************************************************\n// This example support/index.js is processed and\n// loaded automatically before your test files.\n//\n// This is a great place to put global configuration and\n// behavior that modifies Cypress.\n//\n// You can change the location of this file or turn off\n// automatically serving support files with the\n// 'supportFile' configuration option.\n//\n// You can read more here:\n// https://on.cypress.io/configuration\n// ***********************************************************\n\n// Import commands.js using ES2015 syntax:\nimport './commands'\n\n// Alternatively you can use CommonJS syntax:\n// require('./commands')\n","usedDeprecatedRules":[]},{"filePath":"/home/nicolasm/Bureau/ponyracer/env.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/nicolasm/Bureau/ponyracer/eslintrc.cjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/nicolasm/Bureau/ponyracer/src/App.vue","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":1,"column":1}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <Navbar />\n  <main class=\"container\" style=\"margin-top: 70px\">\n    <h1>Ponyracer</h1>\n    <Races />\n  </main>\n</template>\n\n<script lang=\"ts\" setup>\nimport Navbar from './components/Navbar.vue';\nimport Races from '@/views/Races.vue'\n</script>\n\n<style></style>","usedDeprecatedRules":[]},{"filePath":"/home/nicolasm/Bureau/ponyracer/src/__tests__/App.spec.ts","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: The keyword 'import' is reserved","line":1,"column":1}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { describe, expect, test } from 'vitest';\nimport { mount } from '@vue/test-utils';\nimport App from '@/App.vue';\nimport Navbar from '@/components/Navbar.vue';\nimport Races from '@/views/Races.vue';\n\ndescribe('App.vue', () => {\n  test('renders a title', () => {\n    const wrapper = mount(App);\n    expect(wrapper.get('h1').text()).toBe('Ponyracer');\n  });\n\n  test('renders the navbar', () => {\n    const wrapper = mount(App);\n    const navbar = wrapper.findComponent(Navbar);\n    // Maybe you forgot to add <Navbar/> in your App.vue component\n    expect(navbar.exists()).toBe(true);\n  });\n\n  test('renders the races list', () => {\n    const wrapper = mount(App);\n    const races = wrapper.findComponent(Races);\n    // Maybe you forgot to add <Races/> in your App.vue component\n    expect(races.exists()).toBe(true);\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"/home/nicolasm/Bureau/ponyracer/src/components/Navbar.vue","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":1,"column":1}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <nav class=\"navbar navbar-expand-md navbar-light bg-light\">\n    <div class=\"container-fluid\">\n      <a class=\"navbar-brand\">PonyRacer</a>\n      <button \n        type=\"button\" \n        class=\"navbar-toggler\"\n        @click=\"toggleNavbar()\"\n      >\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n      <div \n        id=\"navbar\" \n        class=\"navbar-collapse\"\n        :class=\"{collapse: navbarCollapsed}\"\n      >\n        <ul class=\"navbar-nav me-auto\">\n          <li class=\"nav-item\">\n            <a class=\"nav-link\">Races</a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </nav>\n</template>\n\n<script lang=\"ts\" setup>\nimport { ref } from 'vue';\n\nconst navbarCollapsed = ref(true);\n\nfunction toggleNavbar() {\n  navbarCollapsed.value = navbarCollapsed.value === true ? false : true;\n}\n</script>\n\n<style>\n\n</style>","usedDeprecatedRules":[]},{"filePath":"/home/nicolasm/Bureau/ponyracer/src/components/Race.vue","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":1,"column":1}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <h2>{{ raceModel.name }}</h2>\n  <ul v-for=\"pony in raceModel.ponies\" :key=\"pony.id\">\n    <li>{{ pony.name }}</li>\n  </ul>\n</template>\n\n<script lang=\"ts\" setup>\n/**\n * Imports\n */\nimport { defineProps } from \"vue\";\n\n/**\n * Props\n */\nconst props = defineProps([\"raceModel\"]);\n</script>\n\n<style>\n</style>","usedDeprecatedRules":[]},{"filePath":"/home/nicolasm/Bureau/ponyracer/src/components/__tests__/Navbar.spec.ts","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: The keyword 'import' is reserved","line":1,"column":1}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { describe, expect, test } from 'vitest';\nimport { mount } from '@vue/test-utils';\nimport Navbar from '@/components/Navbar.vue';\n\ndescribe('Navbar.vue', () => {\n  test('should toggle the class on click', async () => {\n    const wrapper = mount(Navbar);\n    const navbarCollapsed = wrapper.get('#navbar').element!;\n    // The element with the id `#navbar` should have the class `collapse`\n    expect(navbarCollapsed.className).toContain('navbar-collapse collapse');\n\n    // We should have a `button` element to collapse the menu\n    const button = wrapper.get('button');\n    await button.trigger('click');\n\n    const navbar = wrapper.get('#navbar').element!;\n    // The element with the id `#navbar` should have not the class `collapse` after a click\n    expect(navbar.className).toContain('navbar-collapse');\n    expect(navbar.className).not.toContain('navbar-collapse collapse');\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"/home/nicolasm/Bureau/ponyracer/src/components/__tests__/Race.spec.ts","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: The keyword 'import' is reserved","line":1,"column":1}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { describe, expect, test } from 'vitest';\nimport { mount } from '@vue/test-utils';\nimport Race from '@/components/Race.vue';\nimport { RaceModel } from '@/models/RaceModel';\n\ndescribe('Race.vue', () => {\n  test('should display a race name and its ponies', () => {\n    const raceModel = {\n      id: 12,\n      name: 'Paris',\n      ponies: [\n        { id: 1, name: 'Gentle Pie', color: 'YELLOW' },\n        { id: 2, name: 'Big Soda', color: 'ORANGE' },\n        { id: 3, name: 'Gentle Bottle', color: 'PURPLE' },\n        { id: 4, name: 'Superb Whiskey', color: 'GREEN' },\n        { id: 5, name: 'Fast Rainbow', color: 'BLUE' }\n      ],\n      startInstant: '2020-02-18T08:02:00Z'\n    } as RaceModel;\n\n    const wrapper = mount(Race, {\n      props: {\n        raceModel\n      }\n    });\n\n    // You need an h2 element for the race name\n    const raceName = wrapper.get('h2');\n    // The h2 element should contain the race name\n    expect(raceName.text()).toContain('Paris');\n    const ponies = wrapper.findAll('li');\n    // You should have one li elements per pony\n    expect(ponies).toHaveLength(5);\n    expect(ponies[0].text()).toContain('Gentle Pie');\n    expect(ponies[1].text()).toContain('Big Soda');\n    expect(ponies[2].text()).toContain('Gentle Bottle');\n    expect(ponies[3].text()).toContain('Superb Whiskey');\n    expect(ponies[4].text()).toContain('Fast Rainbow');\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"/home/nicolasm/Bureau/ponyracer/src/main.ts","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: The keyword 'import' is reserved","line":1,"column":1}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { createApp } from 'vue'\nimport App from './App.vue'\n\nimport './assets/main.css'\n\ncreateApp(App).mount('#app')\n","usedDeprecatedRules":[]},{"filePath":"/home/nicolasm/Bureau/ponyracer/src/models/PonyModel.ts","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: The keyword 'export' is reserved","line":1,"column":1}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export interface PonyModel {\n  id: number,\n  name: string,\n  color: string,\n}","usedDeprecatedRules":[]},{"filePath":"/home/nicolasm/Bureau/ponyracer/src/models/RaceModel.ts","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: The keyword 'import' is reserved","line":1,"column":1}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { PonyModel } from \"./PonyModel\"\nexport interface RaceModel {\n  id: number,\n  name: string,\n  ponies: Array<PonyModel>,\n  startInstant: string,\n}","usedDeprecatedRules":[]},{"filePath":"/home/nicolasm/Bureau/ponyracer/src/views/Races.vue","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":1,"column":1}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div v-for=\"race in races\" :key=\"race.id\">\n    <Race :raceModel=\"race\" />\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\n/**\n * Imports\n */\nimport { ref } from \"vue\";\nimport { RaceModel } from \"@/models/RaceModel\";\nimport Race from \"@/components/Race.vue\";\n\n/**\n * Variables\n */\nconst races = ref<Array<RaceModel>>([\n  {\n    id: 12,\n    name: 'Paris',\n    ponies: [\n      { id: 1, name: 'Gentle Pie', color: 'YELLOW' },\n      { id: 2, name: 'Big Soda', color: 'ORANGE' },\n      { id: 3, name: 'Gentle Bottle', color: 'PURPLE' },\n      { id: 4, name: 'Superb Whiskey', color: 'GREEN' },\n      { id: 5, name: 'Fast Rainbow', color: 'BLUE' },\n    ],\n    startInstant: '2020-02-18T08:02:00Z'\n  },\n  {\n    id: 13,\n    name: 'Tokyo',\n    ponies: [\n      { id: 6, name: 'Fast Rainbow', color: 'BLUE' },\n      { id: 7, name: 'Gentle Castle', color: 'GREEN' },\n      { id: 8, name: 'Awesome Rock', color: 'PURPLE' },\n      { id: 9, name: 'Little Rainbow', color: 'YELLOW' },\n      { id: 10, name: 'Great Soda', color: 'ORANGE' },\n    ],\n    startInstant: '2020-02-18T08:03:00Z'\n  }\n]);\n\n</script>\n\n<style>\n\n</style>","usedDeprecatedRules":[]},{"filePath":"/home/nicolasm/Bureau/ponyracer/src/views/__tests__/Races.spec.ts","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: The keyword 'import' is reserved","line":1,"column":1}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { describe, expect, test } from 'vitest';\nimport { flushPromises, mount } from '@vue/test-utils';\nimport Races from '@/views/Races.vue';\nimport Race from '@/components/Race.vue';\n\ndescribe('Races.vue', () => {\n  test('should display every race name in a title', async () => {\n    const wrapper = mount(Races);\n    await flushPromises();\n\n    const raceComponents = wrapper.findAllComponents(Race);\n    // You should have a `Race` component per race in your template\n    expect(raceComponents).toHaveLength(2);\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"/home/nicolasm/Bureau/ponyracer/vite.config.ts","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: The keyword 'import' is reserved","line":1,"column":1}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { fileURLToPath, URL } from 'node:url';\n\nimport { configDefaults, defineConfig } from 'vitest/config';\nimport vue from '@vitejs/plugin-vue';\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  plugins: [vue()],\n  resolve: {\n    alias: {\n      '@': fileURLToPath(new URL('./src', import.meta.url))\n    }\n  },\n  test: {\n    environment: 'jsdom',\n    clearMocks: true,\n    testTimeout: 10000,\n    reporters: ['default', 'json'],\n    outputFile: 'results/vitest-results.json',\n    sequence: {\n      shuffle: true\n    },\n    coverage: {\n      provider: 'istanbul',\n      all: true,\n      exclude: [...configDefaults.coverage.exclude!, 'src/main.ts', 'src/router.ts', 'src/models'],\n      reporter: ['json-summary', 'text', 'html']\n    }\n  }\n});\n","usedDeprecatedRules":[]}]
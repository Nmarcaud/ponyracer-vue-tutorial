[{"filePath":"/home/nicolasm/Bureau/ponyracer/cypress.config.ts","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: The keyword 'import' is reserved","line":1,"column":1}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { defineConfig } from 'cypress';\n\nexport default defineConfig({\n  reporter: 'mochawesome',\n  reporterOptions: {\n    reportDir: 'results/mochawesome',\n    overwrite: false,\n    html: false,\n    json: true\n  },\n  video: false,\n  retries: 3,\n  e2e: {\n    experimentalRunAllSpecs: true,\n    baseUrl: 'http://localhost:4173'\n  }\n});\n","usedDeprecatedRules":[]},{"filePath":"/home/nicolasm/Bureau/ponyracer/cypress/e2e/example.cy.ts","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token )","line":3,"column":28}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// https://docs.cypress.io/api/introduction/api.html\n\ndescribe('My First Test', () => {\n  it('visits the app root url', () => {\n    cy.visit('/')\n    cy.contains('h1', 'You did it!')\n  })\n})\n","usedDeprecatedRules":[]},{"filePath":"/home/nicolasm/Bureau/ponyracer/cypress/e2e/home.cy.ts","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token )","line":1,"column":24}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"describe('Ponyracer', () => {\n  it('should display title on home page', () => {\n    cy.visit('/');\n    cy.contains('h1', 'Ponyracer');\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"/home/nicolasm/Bureau/ponyracer/cypress/support/commands.ts","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: The keyword 'export' is reserved","line":39,"column":1}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/// <reference types=\"cypress\" />\n// ***********************************************\n// This example commands.ts shows you how to\n// create various custom commands and overwrite\n// existing commands.\n//\n// For more comprehensive examples of custom\n// commands please read more here:\n// https://on.cypress.io/custom-commands\n// ***********************************************\n//\n//\n// -- This is a parent command --\n// Cypress.Commands.add('login', (email, password) => { ... })\n//\n//\n// -- This is a child command --\n// Cypress.Commands.add('drag', { prevSubject: 'element'}, (subject, options) => { ... })\n//\n//\n// -- This is a dual command --\n// Cypress.Commands.add('dismiss', { prevSubject: 'optional'}, (subject, options) => { ... })\n//\n//\n// -- This will overwrite an existing command --\n// Cypress.Commands.overwrite('visit', (originalFn, url, options) => { ... })\n//\n// declare global {\n//   namespace Cypress {\n//     interface Chainable {\n//       login(email: string, password: string): Chainable<void>\n//       drag(subject: string, options?: Partial<TypeOptions>): Chainable<Element>\n//       dismiss(subject: string, options?: Partial<TypeOptions>): Chainable<Element>\n//       visit(originalFn: CommandOriginalFn, url: string, options: Partial<VisitOptions>): Chainable<Element>\n//     }\n//   }\n// }\n\nexport {}\n","usedDeprecatedRules":[]},{"filePath":"/home/nicolasm/Bureau/ponyracer/cypress/support/e2e.ts","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: The keyword 'import' is reserved","line":17,"column":1}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// ***********************************************************\n// This example support/index.js is processed and\n// loaded automatically before your test files.\n//\n// This is a great place to put global configuration and\n// behavior that modifies Cypress.\n//\n// You can change the location of this file or turn off\n// automatically serving support files with the\n// 'supportFile' configuration option.\n//\n// You can read more here:\n// https://on.cypress.io/configuration\n// ***********************************************************\n\n// Import commands.js using ES2015 syntax:\nimport './commands'\n\n// Alternatively you can use CommonJS syntax:\n// require('./commands')\n","usedDeprecatedRules":[]},{"filePath":"/home/nicolasm/Bureau/ponyracer/env.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/nicolasm/Bureau/ponyracer/eslintrc.cjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/nicolasm/Bureau/ponyracer/src/App.vue","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":1,"column":1}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <main class=\"container\" style=\"margin-top: 70px\">\n    <h1>Ponyracer</h1>\n  </main>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n  name: 'App',\n\n  components: {}\n});\n</script>\n\n<style></style>","usedDeprecatedRules":[]},{"filePath":"/home/nicolasm/Bureau/ponyracer/src/__tests__/App.spec.ts","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: The keyword 'import' is reserved","line":1,"column":1}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { describe, expect, test } from 'vitest';\nimport { mount } from '@vue/test-utils';\nimport App from '@/App.vue';\n\ndescribe('App.vue', () => {\n  test('renders a title', () => {\n    const wrapper = mount(App);\n    expect(wrapper.get('h1').text()).toBe('Ponyracer');\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"/home/nicolasm/Bureau/ponyracer/src/main.ts","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: The keyword 'import' is reserved","line":1,"column":1}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { createApp } from 'vue'\nimport App from './App.vue'\n\nimport './assets/main.css'\n\ncreateApp(App).mount('#app')\n","usedDeprecatedRules":[]},{"filePath":"/home/nicolasm/Bureau/ponyracer/vite.config.ts","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: The keyword 'import' is reserved","line":1,"column":1}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { fileURLToPath, URL } from 'node:url';\n\nimport { configDefaults, defineConfig } from 'vitest/config';\nimport vue from '@vitejs/plugin-vue';\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  plugins: [vue()],\n  resolve: {\n    alias: {\n      '@': fileURLToPath(new URL('./src', import.meta.url))\n    }\n  },\n  test: {\n    environment: 'jsdom',\n    clearMocks: true,\n    testTimeout: 10000,\n    reporters: ['default', 'json'],\n    outputFile: 'results/vitest-results.json',\n    sequence: {\n      shuffle: true\n    },\n    coverage: {\n      provider: 'istanbul',\n      all: true,\n      exclude: [...configDefaults.coverage.exclude!, 'src/main.ts', 'src/router.ts', 'src/models'],\n      reporter: ['json-summary', 'text', 'html']\n    }\n  }\n});\n","usedDeprecatedRules":[]}]